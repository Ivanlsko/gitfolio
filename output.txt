

### cypress.config.js

import { defineConfig } from 'cypress'

export default defineConfig({
  e2e: {
    specPattern: 'cypress/e2e/**/*.{cy,spec}.{js,jsx,ts,tsx}',
    baseUrl: 'http://localhost:4173'
  },
  component: {
    specPattern: 'src/**/__tests__/*.{cy,spec}.{js,ts,jsx,tsx}',
    devServer: {
      framework: 'vue',
      bundler: 'vite'
    }
  }
})



### cypress/e2e/example.cy.js

// https://on.cypress.io/api

describe('My First Test', () => {
  it('visits the app root url', () => {
    cy.visit('/')
    cy.contains('h1', 'You did it!')
  })
})



### cypress/support/commands.js

/// <reference types="cypress" />
// ***********************************************
// This example commands.ts shows you how to
// create various custom commands and overwrite
// existing commands.
//
// For more comprehensive examples of custom
// commands please read more here:
// https://on.cypress.io/custom-commands
// ***********************************************
//
//
// -- This is a parent command --
// Cypress.Commands.add('login', (email, password) => { ... })
//
//
// -- This is a child command --
// Cypress.Commands.add('drag', { prevSubject: 'element'}, (subject, options) => { ... })
//
//
// -- This is a dual command --
// Cypress.Commands.add('dismiss', { prevSubject: 'optional'}, (subject, options) => { ... })
//
//
// -- This will overwrite an existing command --
// Cypress.Commands.overwrite('visit', (originalFn, url, options) => { ... })
//
// declare global {
//   namespace Cypress {
//     interface Chainable {
//       login(email: string, password: string): Chainable<void>
//       drag(subject: string, options?: Partial<TypeOptions>): Chainable<Element>
//       dismiss(subject: string, options?: Partial<TypeOptions>): Chainable<Element>
//       visit(originalFn: CommandOriginalFn, url: string, options: Partial<VisitOptions>): Chainable<Element>
//     }
//   }
// }

export {}



### cypress/support/component-index.html

<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <title>Components App</title>
  </head>
  <body>
    <div data-cy-root></div>
  </body>
</html>



### cypress/support/component.js

// ***********************************************************
// This example support/component.ts is processed and
// loaded automatically before your test files.
//
// This is a great place to put global configuration and
// behavior that modifies Cypress.
//
// You can change the location of this file or turn off
// automatically serving support files with the
// 'supportFile' configuration option.
//
// You can read more here:
// https://on.cypress.io/configuration
// ***********************************************************

// Import commands.js using ES2015 syntax:
import './commands'

// Alternatively you can use CommonJS syntax:
// require('./commands')

// Import global styles
import '@/assets/main.css'

import { mount } from 'cypress/vue'

// Augment the Cypress namespace to include type definitions for
// your custom command.
// Alternatively, can be defined in cypress/support/component.d.ts
// with a <reference path="./component" /> at the top of your spec.
/* eslint-disable @typescript-eslint/no-namespace */
declare global {
  namespace Cypress {
    interface Chainable {
      mount: typeof mount
    }
  }
}

Cypress.Commands.add('mount', mount)

// Example use:
// cy.mount(MyComponent)



### cypress/support/e2e.js

// ***********************************************************
// This example support/index.js is processed and
// loaded automatically before your test files.
//
// This is a great place to put global configuration and
// behavior that modifies Cypress.
//
// You can change the location of this file or turn off
// automatically serving support files with the
// 'supportFile' configuration option.
//
// You can read more here:
// https://on.cypress.io/configuration
// ***********************************************************

// Import commands.js using ES2015 syntax:
import './commands'

// Alternatively you can use CommonJS syntax:
// require('./commands')



### env.d.js

/// <reference types="vite/client" />



### index.html

<!doctype html>
<html class="text-[17px] lg:text-[18px] xl:text-[20px]" lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" href="src/assets/icons/vento-favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vento Kvintet</title>
  </head>
  <body>
    <div id="app"></div>
    <script type="module" src="/src/main.js"></script>
  </body>
</html>



### postcss.config.js

export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}



### server/mailer.js

const express = require('express')
const bodyParser = require('body-parser')
const nodemailer = require('nodemailer')
const cors = require('cors')
require('dotenv').config({ path: '../.env' })

const app = express()
const PORT = process.env.PORT || 3000
app.use(bodyParser.json())
app.use(cors())

app.get('/', (req, res) => {
  res.send('Welcome to the Vento Mailer API')
})

const pass = process.env.MAILER_PASS

app.post('/api/send-email', (req, res) => {
  const { name, email, message } = req.body

  // Create a transporter object using SMTP
  const transporter = nodemailer.createTransport({
    host: 'smtp.m1.websupport.sk',
    port: 465,
    secure: true, // true only for 465
    auth: {
      user: 'booking@vento.sk',
      pass: pass // Using process.env for email password
    }
  })

  // Define email content
  const mailOptions = {
    from: 'Vento Web Formulár <web@vento.sk>',
    to: 'booking@vento.sk', // Receiver address (your email address)
    subject: 'New Message from your website', // Subject line
    text: `Meno odosielateľa: ${name}\nDátum události: ${email}\nEmail: ${email}\nSpráva: ${message}` // Email body
  }

  // Send the email
  transporter.sendMail(mailOptions, (error, info) => {
    if (error) {
      console.error('Error:', error)
      res.status(500).send('Failed to send email')
    } else {
      console.log('Email sent:', info.response)
      res.status(200).send('Email sent successfully')
    }
  })
})

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`)
})



### src/App.vue

<script setup lang="ts">
import { RouterLink, RouterView } from 'vue-router'
import NavbarBase from './components/NavbarBase.vue'
import FooterBase from './components/FooterBase.vue'
</script>

<template>
  <div class="w-max-screen">
    <NavbarBase></NavbarBase>
    <RouterView></RouterView>
    <FooterBase></FooterBase>
  </div>
</template>



### src/components/AboutBlockBase.vue

<script setup>
import { computed } from 'vue'

const props = defineProps({
  content: Object,
  index: Number
})

const bgColor = computed(() => {
  return props.index % 2 === 0 ? 'bg-white' : 'bg-lightgrey'
})
</script>
<template>
  <div class="h-screen w-full flex-center px-20 md:px-0 sticky top-0" :class="bgColor">
    <div
      class="text-center md:text-left flex flex-col md:flex-row items-center justify-center w-full md:w-3/5 md:ml-20"
    >
      <div class="md:w-1/5 md:mr-20">
        <p class="text-4xl">{{ props.content?.number }}</p>
        <p class="mt-2 mb-6">{{ props.content?.paragraphShort }}</p>
      </div>
      <p class="text-3xl md:w-4/5">{{ props.content?.paragraphLong }}</p>
    </div>
  </div>
</template>

<style scoped>
.card {
  width: 100vw;
  height: 100vh;
  background: Orgb(20, 50, 100, 0.8);
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  position: sticky;
  top: 0;
}
</style>



### src/components/ButtonBase.vue

<script setup>
import { ref, onMounted } from 'vue'

// to-do prerobit takto props
defineProps({
  content: String,
  sectionId: String,
  mode: String
})

function navigateToSection(id) {
  const section = document.getElementById(id)
  if (section) {
    section.scrollIntoView()
  }
}
</script>

<template>
  <button
    @click="sectionId && navigateToSection(sectionId)"
    class="py-3 px-5 border rounded-full"
    :class="mode === 'black' ? 'border-black' : 'border-white'"
  >
    {{ content }}
  </button>
</template>



### src/components/DropdownBase.vue

<script setup>
import { ref, onMounted } from 'vue'

const props = defineProps({
  content: Object
})
const expanded = ref(false)
</script>

<template>
  <div>
    <div class="divider mt-6 mb-6"></div>
    <li @click="expanded = !expanded" class="cursor-pointer">
      <div class="text-2xl flex justify-between items-center">
        <h3>{{ props.content.title }}</h3>
        <div class="sign">
          {{ expanded ? '-' : '+' }}
        </div>
      </div>
      <p v-if="expanded" class="mt-4">
        {{ props.content.description }}
      </p>
    </li>
  </div>
</template>

<style scoped>
.divider {
  width: 100%;
  height: 1px;
  background-color: black;
}

.expandable-icon {
  width: 10px;
  height: 10px;
}

.line {
  display: block;
  width: 10px;
  height: 1px;
  background-color: black;
}
.vertical {
  transform: rotate(90deg);
}
/*
.horizontal {
} */
</style>



### src/components/FooterBase.vue

<script setup></script>

<template>
  <!-- to-do: vytvorit samostatnu classu na dark/light sections -->
  <footer class="bg-black text-white px-[40px] md:px-[60px] pt-20 pb-10">
    <div class="grid grid-cols-1 sm:grid-cols-2">
      <div class="span-4/6">
        <div class="sm:w-2/3 md:w-1/2">
          <div>
            <div logo><img src="../assets/images/vento.svg" alt="vento kvintet logo" /></div>
          </div>
          <p paragraph class="mt-6">
            Sme piati umelci tvoriaci profeionálne hudobné zoskupenie. Vašemu podujatiu dodáme
            unikátnu atmosféru.
          </p>
        </div>
      </div>
      <div class="flex gap-16 pr-10 mt-10 sm:mt-0 sm:justify-self-end">
        <div class="span-1/6">
          <h5 class="font-medium">Kontakt na nás</h5>
          <p class="mt-6 text-sm">booking@vento.sk</p>
          <p class="mt-4 text-sm underline"><a href="tel: +421 903 274 341">+421 903 274 341</a></p>
        </div>
        <nav class="span-1/6">
          <h5 class="font-medium">Navigácia</h5>
          <ul class="text-sm">
            <li class="mt-6"><a href="#events">Služby</a></li>
            <li class="mt-4"><a href="#about">O nás</a></li>
            <li class="mt-4"><a href="#people">Členovia</a></li>
          </ul>
        </nav>
      </div>
    </div>
    <div class="h-[1px] w-full bg-white my-12"></div>
    <div class="sm:flex justify-between text-[0.8rem]" bottom>
      <p>
        Web vytvoril <a href="" class="underline">Ivan Leško</a>. Za fotografie ďakujeme
        <a href="" class="underline">Tomášovi Telepákovi</a>.
      </p>
      <p class="mt-4 sm:mt-0">Vento, 2024</p>
    </div>
  </footer>
</template>



### src/components/FormBase.vue

<script setup>
import { ref } from 'vue'
import ButtonBase from './ButtonBase.vue'
import axios from 'axios'

const {
  MODE: mode,
  VITE_MAILER_HOST: prod,
  VITE_MAILER_HOST_DEV: dev,
  VITE_SEND_EMAIL: path
} = import.meta.env

const mailerBaseUrl = mode === 'development' ? dev : prod
const mailerApiUrl = mailerBaseUrl + path

const name = ref('')
const date = ref('')
const email = ref('')
const message = ref('')

const buttonStates = {
  send: 'Odoslať správu',
  sending: 'Správa sa odosiela',
  sent: 'Správa bola odoslaná :)'
}
const buttonState = ref(buttonStates.send)

function activateServer() {
  axios
    .get(mailerBaseUrl)
    .then((response) => {})
    .catch((error) => {
      console.error('Error:', error)
    })
}

function sendMail() {
  buttonState.value = buttonStates.sending
  const data = {
    name: name.value,
    email: email.value,
    date: date.value,
    message: message.value
  }

  axios
    .post(mailerApiUrl, data, {
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then((response) => {
      resetValues()
      buttonState.value = buttonStates.sent
      setTimeout(() => (buttonState.value = buttonStates.send), 5000)
    })
    .catch((error) => {
      console.error('Error:', error)
    })
}

function resetValues() {
  name.value = ''
  date.value = ''
  email.value = ''
  message.value = ''
}
</script>
<template>
  <form @submit.prevent>
    <div>
      <label for="email">Vaša emailová adresa</label><br />
      <input
        class="border-b-[1px] border-black w-full mt-6 mb-8 rounded-none appearance-none"
        type="text"
        id="email"
        name="email"
        v-model="email"
        required
      /><br />
    </div>
    <div>
      <label for="name">Meno a priezvisko</label><br />
      <input
        class="border-b-[1px] border-black w-full mt-6 mb-8 rounded-none appearance-none"
        type="text"
        id="name"
        name="name"
        v-model="name"
        required
      /><br />
    </div>
    <div>
      <label for="date">Dátum události</label><br />
      <input
        class="border-b-[1px] border-black w-full mt-6 mb-8 rounded-none appearance-none"
        type="date"
        id="date"
        name="date"
        placeholder="dd/mm/rrrr"
        v-model="date"
        @click="activateServer"
        required
      /><br />
    </div>
    <div>
      <label for="text">Správa</label><br />
      <textarea
        class="border-b-[1px] border-black w-full mt-6 mb-8 rounded-none appearance-none"
        id="text"
        name="text"
        rows="4"
        cols="50"
        v-model="message"
        required
        @click="activateServer"
      ></textarea
      ><br />
    </div>
    <div>
      <ButtonBase
        :mode="'black'"
        :content="buttonState"
        type="submit"
        value="Submit"
        @click="sendMail"
      ></ButtonBase>
    </div>
  </form>
</template>



### src/components/NavbarBase.vue

<script setup>
import { onMounted, onUnmounted, ref } from 'vue'
import ButtonBase from './ButtonBase.vue'
import NavbarList from './NavbarList.vue'

const windowWidth = ref(window.innerWidth)
const menuOpened = ref(false)

const handleResize = () => {
  windowWidth.value = window.innerWidth
}

onMounted(() => {
  window.addEventListener('resize', handleResize)
})

onUnmounted(() => {
  window.removeEventListener('resize', handleResize)
})

function handleMenu() {
  menuOpened.value = !menuOpened.value // Update the value of menuOpened directly
  if (menuOpened.value) {
    document.body.style.overflow = 'hidden'
  } else {
    document.body.style.overflow = 'unset'
  }
}
</script>

<template>
  <nav v-if="!menuOpened" class="flex justify-between absolute top-0 w-full p-6 text-white">
    <div id="logo" class="flex-center -mt-2">
      <img src="../assets/images/vento.svg" alt="logo vento kvintet" />
    </div>
    <div v-if="windowWidth < 768">
      <div @click="handleMenu" class="h-8 w-8">
        <img src="../assets/icons/menu.svg" alt="close menu icon" class="h-full" />
      </div>
    </div>
    <div v-else class="flex">
      <ul class="flex items-center mr-4">
        <NavbarList></NavbarList>
      </ul>
      <ButtonBase :content="'Ozvite sa nám'" :sectionId="'message'"></ButtonBase>
    </div>
  </nav>
  <div v-else class="w-full h-screen bg-white fixed top-0 overflow-hidden flex flex-col">
    <div class="flex justify-end w-full p-6 text-white">
      <div @click="handleMenu()" class="mr-[15px] h-8 w-8">
        <img src="../assets/icons/close.svg" alt="close menu icon" class="h-full" />
      </div>
    </div>
    <nav class="grow flex-center">
      <ul class="flex-center flex-col grow gap-6 text-4xl">
        <NavbarList @link-click="handleMenu()"></NavbarList>
      </ul>
    </nav>
  </div>
</template>

<style scoped></style>



### src/components/NavbarList.vue

<script setup>
defineEmits(['linkClick'])
</script>

<template>
  <li @click="$emit('linkClick')" class="mr-4"><a href="#events">Služby</a></li>
  <li @click="$emit('linkClick')" class="mr-4"><a href="#about">O nás</a></li>
  <li @click="$emit('linkClick')" class="mr-4"><a href="#people">Členovia</a></li>
</template>



### src/components/PersonBlockBase.vue

<script setup>
import ButtonBase from './ButtonBase.vue'

const props = defineProps({
  person: Object,
  index: Number
})
</script>
<template>
  <div class="bg-darkgrey flex flex-col items-center">
    <div person-image class="borderw-full">
      <img :src="props.person?.imageLink" alt="fotogragia clen vento kvintet" />
    </div>
    <div person-details class="flex flex-col items-center p-8 text-center">
      <h4 class="text-lg mb-1">{{ props.person?.name }}</h4>
      <p class="text-sm text-lightgrey opacity-90">{{ props.person?.role }}</p>
    </div>
  </div>

  <div class="bg-darkgrey flex flex-col justify-between p-8 text-center" v-if="props.person?.last">
    <p class="text-2xl mb-10">Vy nás už poznáte, povedzte nám o sebe a Vašom podujatí.</p>
    <ButtonBase :content="'Ozvite sa nám'" :sectionId="'message'"></ButtonBase>
  </div>
</template>



### src/components/TestimonialBase.vue

<script setup>
const props = defineProps({
  content: Object
})
</script>

<template>
  <div class="text-white p-8 bg-darkgrey">
    <div author class="flex items-center mb-6">
      <div class="mr-4 rounded-full w-16 bg-white flex-center">
        <img
          class="rounded-full"
          :src="content?.author.imageLink"
          alt="fotografia autora recenzie"
        />
      </div>
      <div>
        <h4>{{ props.content?.author.name }}</h4>
        <p class="text-lightgrey text-sm opacity-90">{{ props.content?.author.role }}</p>
      </div>
    </div>
    <p class="text-base"> {{ props.content?.testimonial }}</p>
  </div>
</template>



### src/main.js

import { createApp } from 'vue'
import App from './App.vue'
import router from './router'
import './assets/index.css'

const app = createApp(App)

app.use(router)

app.mount('#app')



### src/router/index.js

import { createRouter, createWebHistory } from 'vue-router'
import HomeView from '../views/HomeView.vue'

const router = createRouter({
  history: createWebHistory(import.meta.env.BASE_URL),
  routes: [
    {
      path: '/',
      name: 'home',
      component: HomeView
    }
  ]
})

export default router



### src/sections/About.vue

<script setup>
import AboutBlockBase from '../components/AboutBlockBase.vue'
const aboutBlocksContent = [
  {
    number: '50+',
    paragraphShort: 'rokov skúseností',
    paragraphLong:
      'Hráme dlho a hráme radi. Aj preto sme sa rozhodli našu radosť z hry pretaviť do Vento kvintet.'
  },
  {
    number: '2023',
    paragraphShort: 'rok vzniku',
    paragraphLong: 'Hráme spolu dlho, no ako Vento kvintet sme prvé podujatie odohrali v roku 2023.'
  },
  {
    number: '240+',
    paragraphShort: 'minút repeortáru',
    paragraphLong: 'Spoločne zostavíme program pre Vaše podujatie tak, aby ste boli spokojní.'
  },
  {
    number: '∞',
    paragraphShort: 'ochoty dohodnúť sa',
    paragraphLong: 'Rozumieme, že každé podujatie je niečím špecifické, preto sme veľmi prisôsobiví'
  }
]
</script>

<template>
  <section id="about" class="relative h-[400vh]">
    <AboutBlockBase
      v-for="(aboutBlock, key) in aboutBlocksContent"
      :content="aboutBlock"
      :key="key"
      :index="key"
    ></AboutBlockBase>
  </section>
</template>

<style scoped>
/* defined in the main file, but this section is specific
 */
section {
  padding: unset;
}
</style>



### src/sections/Events.vue

<script setup>
import DropdownBase from '../components/DropdownBase.vue'

const dropdownContent = {
  celebrations: {
    title: 'Svadby, oslavy, výročia',
    description:
      'Prestavte si slávnostnú fanfáru, v podaní dychového kvintenta, doprevádzajúcu vás k oltáru. Predstavte si jemné tóny rozplývajúce sa po miestnosti počas oslavy Vášho výročia. Vašemu špeciálnemu dňu dodáme niečo viac. Vytvoríme zvuk k Vašim nezabudnuteľným spomienkám. Ak túžite vášmu dňu dodať nádych sofistikovanosti a elegancie, ste tu správne.'
  },
  culturalEvents: {
    title: 'Kultúrne podujatia',
    description:
      'Pozdvihnite svoje kultúrne podujatie očarujúcimi melódiami nášho hudobného kvinteta. Organizujete vernisáž v galérii, večierok v múzeu alebo kultúrny festival? Náš súbor vnesie do každej príležitosti nádych rafinovanosti a elegancie. Od barokových majstrovských diel až po súčasné kompozície, náš rozmanitý repertoár uchváti publikum aj to najnáročnejšie publikum.'
  },
  companyEvents: {
    title: 'Firemné podujatia',
    description:
      'Túžite po originálnom firemnom podujatí? Či už ide o slávnostnú večeru, uvedenie produktu na trh alebo networkingovú recepciu, Vento kvintent odlíši Vašú událosť od každej inej. Môžte sa spoľahnúť, že na Vašej firemnej akcii zahráme na správnu nôtu a zanecháme trvalý dojem. Ak má Vaša firma profesionalitu a kreativitu v DNA budeme sa k sebe hodiť.'
  }
}
</script>

<template>
  <section id="events" class="w-full flex justify-end">
    <div class="w-full lg:w-3/5">
      <h2 class="text-3xl mb-12">
        V našom repertoári sa nachádzajú primárne klasické kompozície. Budeme pre to vhodnou voľbou
        pre Vaše významné události.
      </h2>
      <ul>
        <DropdownBase
          v-for="(content, key) in dropdownContent"
          :key="key"
          :content="content"
        ></DropdownBase>
      </ul>
    </div>
  </section>
</template>



### src/sections/Hero.vue

<script setup>
import ButtonBase from '../components/ButtonBase.vue'
</script>

<template>
  <section
    class="bg-[url('https://vento.sk/media/vento_mobile.webp')] bg-top min-h-[1000px] lg:bg-[url('https://vento.sk/media/vento_desktop.webp')] w-full h-screen bg-cover flex-center bg-no-repeat lg:bg-auto"
  >
    <div id="hero-content" class="text-white sm:mx-8 lg:mx-24 mt-28">
      <h1 class="col-span-2 text-[3rem] sm:text-5xl -mb-4 sm:mb-20">
        Vento kvintet je dychové hudobné teleso tvorené piatimi profesionálmi.
      </h1>
      <div class="flex-col lg:flex lg:flex-row justify-between items-start">
        <div id="availability" class="lg:w-1/2 flex items-center mt-20 lg:mt-0">
          <div id="circle-available" class="w-2 h-2 rounded-full bg-white mr-2"></div>
          <p class="text-sm">Termíny sú k dispozícií</p>
        </div>
        <p id="header-paragraph" class="lg:w-1/2 text-2xl mt-4 sm:mt-10 lg:mt-0">
          Vašemu podujatiu dodáme jedinečnú atmosféru, či už ide o svadbu, firemný večierok alebo
          vernisáž.
        </p>
      </div>
      <ButtonBase
        class="w-full mt-10 md:hidden"
        :content="'Ozvite sa nám'"
        :sectionId="'message'"
      ></ButtonBase>
    </div>
  </section>
</template>



### src/sections/Message.vue

<script setup>
import FormBase from '../components/FormBase.vue'
</script>

<template>
  <section id="message" class="md:flex w-full gap-32">
    <div class="md:w-1/2">
      <h2 class="text-5xl mb-12">Ozvite sa nám</h2>
      <p>
        Ak by ste sa snami radi dohodli na spolupráci, máte akúkoľvek otázku alebo Vás iba zaujíma
        ako sa máme, pošite nám správu. Ozveme sa čo najskôr.
      </p>
    </div>
    <FormBase class="mt-20 md:w-1/2 md:mt-0"></FormBase>
  </section>
</template>



### src/sections/People.vue

<script setup>
import PersonBlockBase from '../components/PersonBlockBase.vue'
const people = [
  {
    name: '​Zuzana Mega',
    role: 'flauta, členka orchestra NDKE',
    imageLink: 'https://vento.sk/media/flauta.webp'
  },
  {
    name: '​Jana Lešková',
    role: '​hoboj, členka orchestra NDKE',
    imageLink: 'https://vento.sk/media/hoboj.webp'
  },
  {
    name: 'Daniel Tkáč',
    role: '​klariner, študent 5. ročníka konzervatória',
    imageLink: 'https://vento.sk/media/klarinet.webp'
  },
  {
    name: 'Miroslav Leško',
    role: '​lesný roh, člen orchestra NDKE',
    imageLink: 'https://vento.sk/media/roh.webp'
  },
  {
    name: '​Andriy Kholod',
    role: 'fagot, člen orchestra NDKE',
    last: true,
    imageLink: 'https://vento.sk/media/fagot.webp'
  }
]
</script>

<template>
  <section id="people" class="bg-black text-white">
    <h1 class="text-3xl mb-12">Umelci, hudobníci... ľudia</h1>
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
      <PersonBlockBase
        v-for="(person, key) in people"
        :key="key"
        :person="person"
      ></PersonBlockBase>
    </div>
  </section>
</template>



### src/sections/Testimonials.vue

<script setup>
import TestimonialBase from '../components/TestimonialBase.vue'
const testimonials = [
  {
    author: {
      name: 'Dagmar Duždová',
      role: 'Klaviristka, riaditeľka ARTIS festivalu',
      imageLink: 'https://vento.sk/media/duzdova.webp'
    },
    testimonial:
      '“Vento kvintet je zanietený, svieži mladý súbor, ktorý si  zaslúži poslucháčsku pozornosť. Ako skupina sú dokonale zohraní, súzniaci spoločným pohľadom na hudbu, ktorú napĺňajú nadšením a dychtivosťou po dokonalosti. Vystúpenie takejto kvality si dovoľujem označiť za perfektnú reklamu komornej hudbe a dychovým zoskupeniam.'
  },
  {
    author: {
      name: 'Igor Dohovič',
      role: 'Dirigent orchestra NDKE',
      imageLink: 'https://vento.sk/media/dohovic.webp'
    },
    testimonial:
      '“Pri každom umeleckom alebo ľudskom kontakte s členmi kvinteta VENTO prežívam mimoriadne pozitívne emócie. Či už je to umelecký zážitok z ich výkonov, či spoločná spolupráca alebo len obyčajný rozhovor na ulici, vždy spôsobujú veľké potešenie. Ich ľudskosť, umelecká zrelosť a nadšenie sú zárukou nezabudnuteľných zážitkov.'
  },
  {
    author: {
      name: 'Katarína Burgrová',
      role: 'Muzikologička, hudobná kritička',
      imageLink: 'https://vento.sk/media/burgrova.webp'
    },
    testimonial:
      '“Vznik nového komorného telesa na Slovensku je výrazným počinom pre spestrenie hudobno-kultúrneho života v tomto regióne. Dychové kvinteto so svojou farbou zvuku bude určite veľkým potešením pre ich poslucháčov. Ich prvotné koncerty boli predzvesťou kultúrnych zážitkov vysokej interpretačnej kvality.'
  }
]
</script>

<template>
  <section class="bg-black text-white">
    <!-- to-do: definovat h# selectory v hlavnom cssku -->
    <h2 class="text-3xl mb-12">Čo o nás hovoria iní</h2>
    <div id="testimonials" class="grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-3">
      <TestimonialBase
        v-for="(content, key) in testimonials"
        :key="key"
        :content="content"
      ></TestimonialBase>
    </div>
  </section>
</template>



### src/views/HomeView.vue

<script setup lang="ts">
import About from '@/sections/About.vue'
import Events from '@/sections/Events.vue'
import Hero from '@/sections/Hero.vue'
import Message from '@/sections/Message.vue'
import People from '@/sections/People.vue'
import Testimonials from '@/sections/Testimonials.vue'
</script>

<template>
  <Hero></Hero>
  <Events></Events>
  <Testimonials></Testimonials>
  <About></About>
  <People></People>
  <Message></Message>
</template>



### tailwind.config.js

// tailwind.config.js
module.exports = {
  purge: ['./index.html', './src/**/*.{vue,js,ts,jsx,tsx}'],
  darkMode: false, // or 'media' or 'class'
  theme: {
    fontFamily: {
      sans: ['satoshi', 'system-ui'],
      serif: ['ui-serif', 'Georgia'],
      mono: ['ui-monospace', 'SFMono-Regular']
    },
    fontSize: {
      sm: ['0.9rem', { lineHeight: '1.389' }],
      base: ['1rem', { lineHeight: '1.6' }],
      lg: ['1.2rem', { lineHeight: '1.4' }],
      xl: ['1.4rem', { lineHeight: '1.393' }],
      '2xl': ['1.5rem', { lineHeight: '1.4' }],
      '3xl': ['2rem', { lineHeight: '1.4' }],
      '4xl': ['2.2rem', { lineHeight: '1.34' }],
      '5xl': ['3.7rem', { lineHeight: '1.243', letterSpacing: '-0.01em' }]
    },
    colors: {
      transparent: 'transparent',
      current: 'currentColor',
      white: '#ffffff',
      black: '#000000',
      darkgrey: '#161616',
      lightgrey: '#EFF3F5'
    },
    extend: {}
  },
  variants: {
    extend: {}
  },
  plugins: []
}



### vite.config.js

import { fileURLToPath, URL } from 'node:url'

import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [
    vue(),
  ],
  resolve: {
    alias: {
      '@': fileURLToPath(new URL('./src', import.meta.url))
    }
  }
})
